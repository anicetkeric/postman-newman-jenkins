{
	"info": {
		"_postman_id": "dea8a05a-c12f-4d33-99e3-ef34840395be",
		"name": "JSON-Placeholder",
		"description": "API collection \n\nhttps://jsonplaceholder.typicode.com/",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GET Posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"    pm.expect(jsonData[0].id).to.an(\"number\");",
							"    pm.expect(jsonData[0].userId).to.an(\"number\");",
							"    pm.expect(jsonData[0].title).to.an(\"string\");",
							"    pm.expect(jsonData[0].body).to.an(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Posts By Id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"object\");",
							"    pm.expect(jsonData.id).to.an(\"number\");",
							"    pm.expect(jsonData.userId).to.an(\"number\");",
							"    pm.expect(jsonData.title).to.an(\"string\");",
							"    pm.expect(jsonData.body).to.an(\"string\");",
							"});",
							"",
							"pm.test(\"Equal value\", function () {",
							"  const jsonData = pm.response.json();",
							"  pm.expect(jsonData.id).to.eql(1);",
							"  pm.expect(jsonData.userId).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Posts By Id and comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"    pm.expect(jsonData[0].id).to.an(\"number\");",
							"    pm.expect(jsonData[0].postId).to.an(\"number\");",
							"    pm.expect(jsonData[0].name).to.an(\"string\");",
							"    pm.expect(jsonData[0].email).to.an(\"string\");",
							"    pm.expect(jsonData[0].body).to.an(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1/comments",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1",
						"comments"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get post comment",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"    pm.expect(jsonData[0].id).to.an(\"number\");",
							"    pm.expect(jsonData[0].postId).to.an(\"number\");",
							"    pm.expect(jsonData[0].name).to.an(\"string\");",
							"    pm.expect(jsonData[0].email).to.an(\"string\");",
							"    pm.expect(jsonData[0].body).to.an(\"string\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/comments?postId=1",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"comments"
					],
					"query": [
						{
							"key": "postId",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.an(\"number\");",
							"});",
							"",
							"pm.test(\"Equal value\", function () {",
							"  const jsonData = pm.response.json();",
							"  pm.expect(jsonData.id).to.eql(101);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{proto}}://{{domain}}/posts",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT posts",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.an(\"number\");",
							"});",
							"",
							"pm.test(\"Equal value\", function () {",
							"  const jsonData = pm.response.json();",
							"  pm.expect(jsonData.id).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"object\");",
							"    pm.expect(jsonData.id).to.an(\"number\");",
							"    pm.expect(jsonData.userId).to.an(\"number\");",
							"    pm.expect(jsonData.title).to.an(\"string\");",
							"    pm.expect(jsonData.body).to.an(\"string\");",
							"});",
							"",
							"pm.test(\"Equal value\", function () {",
							"  const jsonData = pm.response.json();",
							"  pm.expect(jsonData.id).to.eql(1);",
							"  pm.expect(jsonData.userId).to.eql(1);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE post",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Response fields\", function () {",
							"    var jsonData = pm.response.json();",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET Posts By Id - Not Found Result",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{proto}}://{{domain}}/posts/1000",
					"protocol": "{{proto}}",
					"host": [
						"{{domain}}"
					],
					"path": [
						"posts",
						"1000"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "proto",
			"value": "http",
			"type": "default"
		},
		{
			"key": "domain",
			"value": "jsonplaceholder.typicode.com",
			"type": "default"
		}
	]
}